(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"/Users/johnfarrell/Documents/ITP/Residency/NationalParks/app/natlparks_v2/public/js/cardBuild.jsx":[function(require,module,exports){


var Buttons = React.createClass({displayName: "Buttons",
	getInitialState: function () {
		return {
			isSelected: false
		};
	},

	handleClick: function () {
		this.setState({
			isSelected: true
		});
	},

	render: function () {
	    var isSelected = this.state.isSelected;
		
		if (isSelected) {
			$.get('/info/'+this.props.name, function (data) {
				ReactDOM.render(React.createElement(Card, {url: data.url, parkname: data.name, date: data.established}), document.getElementById('infoContainer'));
				ReactDOM.render(React.createElement(Map, {parkLat: data.lat, parkLon: data.lon, parkZoom: 10}), document.getElementById('mapContainer'));			
			});
		}
		
		return (
		 React.createElement("div", null, 
			React.createElement("button", {type: "button", onClick: this.handleClick, className: "btn btn-default", name: this.props.id}, this.props.display)
		)
		)
	}
});



var Card = React.createClass({displayName: "Card",

	render: function () {
		$('#infoContainer').css('background-color','#C77F49');
/*		I shouldn't need this ^ but having issue
		var cardStyle = {
    		backgroundColor: '#C77F49'  
    	};
		style={cardStyle} */
		return (	
			React.createElement("div", {className: "card"}, 
				React.createElement("img", {className: "card-img-top", id: "card-header-image", src: this.props.url, alt: "card header image"}), 
					React.createElement("div", {className: "card-block"}, 
					React.createElement("h4", {className: "card-title", id: "cardTitle"}, "At a Glance"), 
					React.createElement("ul", {className: "list-group list-group-flush", style: this.props.style, id: "listContainer"}, 
						React.createElement("li", {className: "list-group-item"}, 
							React.createElement("span", {className: "cardAttrs"}, "Park Name: ", this.props.parkname)
						), 
						React.createElement("li", {className: "list-group-item"}, 
							React.createElement("span", {className: "cardAttrs"}, "Established: ", this.props.date)
						)
					)
				)
        	)			
    	)
  	}
});


var Map = React.createClass({displayName: "Map",
	
	getInitialState: function() {
		return {
			lat: this.props.parkLat,
			lon: this.props.parkLon,
			zoom: this.props.parkZoom
		};
	},

	componentWillReceiveProps: function(nextProps) {

		this.map.setView([nextProps.parkLat, nextProps.parkLon], nextProps.parkZoom);

	},

    createMap: function (element) {
    	var southWest = L.latLng(25.0855988971, -132.01171875);
	    var northEast = L.latLng(49.8096315636, -65.91796875);
        var bounds = L.latLngBounds(southWest, northEast);

        this.map = L.map(element, {
        	maxBounds: bounds,
        	minZoom: 4
        }).setView([this.state.lat, this.state.lon], this.state.zoom);
        L.tileLayer('https://{s}.tile.thunderforest.com/outdoors/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(this.map);
        this.map.scrollWheelZoom.disable();
        return this.map;
    },

    componentDidMount: function () {	
    	if (this.mapDiv !== null) {
    		this.createMap(this.mapDiv);
    	};
    	this.state.zoom=10;
    },

    render: function () {

    	var divStyle = {
    		height: 480,
    		width: "auto"
    	};
    	return (
    		React.createElement("div", {className: "map", style: divStyle, ref: (ref) => this.mapDiv = ref})
    	)
    }
});




//ReactDOM.render(<Map startLat={38.8945571} startLon={-97.3677515} startZoom={4} />, document.getElementById('mapContainer'));



ReactDOM.render(React.createElement(Buttons, {name: "smokyMountains", display: "Great Smoky Mountains"}),  document.getElementById('btn-one'));
ReactDOM.render(React.createElement(Buttons, {name: "grandCanyon", display: "Grand Canyon"}),  document.getElementById('btn-two'));
ReactDOM.render(React.createElement(Buttons, {name: "rockyMountain", display: "Rocky Mountain"}),  document.getElementById('btn-three'));
ReactDOM.render(React.createElement(Buttons, {name: "yosemite", display: "Yosemite"}),  document.getElementById('btn-four'));
ReactDOM.render(React.createElement(Buttons, {name: "yellowstone", display: "Yellowstone"}),  document.getElementById('btn-five'));
ReactDOM.render(React.createElement(Buttons, {name: "zion", display: "Zion"}),  document.getElementById('btn-six'));
ReactDOM.render(React.createElement(Buttons, {name: "olympic", display: "Olympic"}),  document.getElementById('btn-seven'));
ReactDOM.render(React.createElement(Buttons, {name: "grandTeton", display: "Grand Teton"}),  document.getElementById('btn-eight'));
ReactDOM.render(React.createElement(Buttons, {name: "acadia", display: "Acadia"}),  document.getElementById('btn-nine'));
ReactDOM.render(React.createElement(Buttons, {name: "glacier", display: "Glacier"}),  document.getElementById('btn-ten'));

},{}]},{},["/Users/johnfarrell/Documents/ITP/Residency/NationalParks/app/natlparks_v2/public/js/cardBuild.jsx"])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
